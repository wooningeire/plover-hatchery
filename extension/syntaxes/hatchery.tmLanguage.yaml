$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Hatchery dictionary
scopeName: source.hatchery

patterns: 
  - { include: "#headings" }
  - { include: "#comments" }
  - { include: "#strings" }
  - { include: "#unquoted-strings" }
#   - { include: "#sopheme_seqs" }


repository:
  headings:
    patterns:
      - name: meta.heading.section.hatchery
        begin: \[
        end: \]

        patterns:
          - name: variable.section.hatchery
            match: \w*


  comments:
    patterns:
      - name: comment.hatchery
        begin: \#
        end: $


  strings:
    patterns:
      - name: definition.hatchery # string.quoted.double.hatchery
        begin: \"
        end: \"

        patterns:
          - { include: "#transclusions" }
          - { include: "#sophemes" }
          - { include: "#keys" }


  unquoted-strings:
    patterns:
      - { include: "#keys" }


  keys:
    patterns:
      - name: meta.key.hatchery
        match: ([@#^])?([\w']+)([@#^])?(?:(:)(\d+))?
        captures:
          1: { name: storage.hatchery }
          2:
            patterns:
              - { include: "#ids" }
          3: { name: storage.hatchery }
          4: { name: storage.hatchery }
          5: { name: constant.numeric.variation.hatchery }
  
#   values:
#     patterns:
#       - { include: "#sopheme_seqs" }
#       - name: string.unquoted.hatchery
#         match: .*

#   sopheme_seqs:
#     patterns:
#       - name: meta.sopheme_seqs.hatchery
#         match: "(.*)(?: (.*))?"
#         captures:
#           1:
#             patterns:
#               - { include: "#sophemes" }
#               - { include: "#transclusions" }
#           2:
#             patterns:
#               - { include: "#sopheme_seqs" }

  sophemes:
    patterns:
      - name: meta.sopheme.hatchery
        match: ([\w']*)(\.)(\([ \w@\d!?]*\)|[\w@\d!?]*)
        captures:
          1: { name: string.ortho.hatchery }
          2: { name: punctuation.separator.sopheme.hatchery }
          3:
            patterns:
              - { include: "#keysymbols" }

#   phonos:
#     patterns:
#       - name: meta.sopheme.phono.hatchery
#         match: (\()(.*)(\))
#         captures:
#           1: { name: punctuation.separator.sopheme.phono.begin.hatchery }
#           2:
#             patterns:
#               - { include: "#keysymbol_seqs" }
#           3: { name: punctuation.separator.sopheme.phono.end.hatchery }
#       - { include: "#keysymbols" }

#   keysymbol_seqs:
#     patterns:
#       - name: meta.sopheme.phono.keysymbol_seq.hatchery
#         match: "(\\S+)(?: (.*))?"
#         captures:
#           1:
#             patterns:
#               - { include: "#keysymbols" }
#           2:
#             patterns:
#               - { include: "#keysymbol_seqs" }


  keysymbols:
    patterns:
      - name: meta.sopheme.phono.keysymbol.hatchery
        match: ([@\w]+)(!\d*)?(\?)?
        captures:
          1: { name: keyword.hatchery }
          2:
            patterns:
              - { include: "#stresses" }
          3: { name: punctuation.optional.hatchery }


  stresses:
    patterns:
      - name: meta.stress.hatchery
        match: (!)(\d*)
        captures:
          1: { name: punctuation.stress.hatchery }
          2: { name: constant.numeric.stress.hatchery }


  transclusions:
    patterns:
      - name: meta.transclusion.hatchery
        match: (\{)([ @#^:\w'\d]*)(\})(!\d*)?
        captures:
          1: { name: punctuation.transclusion.begin.hatchery }
          2:
            patterns:
              - { include: "#keys" }
          3: { name: punctuation.transclusion.end.hatchery }
          4:
            patterns:
              - { include: "#stresses" }

  ids:
    patterns:
      - name: meta.id.hatchery
        match: ([\w']+)
        captures:
          1: { name: variable.hatchery }

